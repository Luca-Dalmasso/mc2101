#!/bin/bash
 
nAddr=0
fSize=16383
cByte=""
iStart=0

VIRTUAL_DATA_RAM_START=1048576
PHYSICAL_DATA_RAM_START=8192

rm -rf ../program.vhd

#vhdl descriptor
echo "--This file is automatically generated, please do not change the content" >> ../program.vhd
echo "--init code for sram, synthesizable by Quartus II software" >> ../program.vhd
echo " " >> ../program.vhd

#vhdl header
echo "LIBRARY IEEE;" >> ../program.vhd
echo "USE IEEE.STD_LOGIC_1164.ALL;" >> ../program.vhd
echo " " >> ../program.vhd

#vhdl package start 
echo "PACKAGE PROGRAM IS" >> ../program.vhd
echo " " >> ../program.vhd
echo "  TYPE MEM_TYPE IS ARRAY (0 TO 2**14 -1) OF STD_LOGIC_VECTOR(7 DOWNTO 0);" >> ../program.vhd
echo "  SIGNAL mem : MEM_TYPE;" >> ../program.vhd
echo "  FUNCTION init_my_ram RETURN MEM_TYPE;" >> ../program.vhd
#vhdl package end
echo "END PACKAGE PROGRAM;" >> ../program.vhd
echo " " >> ../program.vhd

#vhdl package body
echo "PACKAGE BODY PROGRAM IS" >> ../program.vhd
echo " " >> ../program.vhd

echo "  FUNCTION init_my_ram RETURN MEM_TYPE IS" >> ../program.vhd
echo "  VARIABLE m: MEM_TYPE;" >> ../program.vhd
echo "  BEGIN" >> ../program.vhd

#init memory from spi_stim.txt
while read line
do
	cByte=$(echo $line | cut -d'_' -f2)
	cAddr=$(echo $line | cut -d'_' -f1)
	#convert address to integer
	cAddr=$(( 16#$cAddr ))
	#convert virtual address to physical
	if [ $cAddr -ge $VIRTUAL_DATA_RAM_START ]
	then
	    cAddr=$(( $cAddr-$VIRTUAL_DATA_RAM_START+$PHYSICAL_DATA_RAM_START))
	fi
	#little endian format
	echo "      m($cAddr):=x\"${cByte:6:2}\" ;">> ../program.vhd
	cAddr=$(( $cAddr+1 )) 
	echo "      m($cAddr):=x\"${cByte:4:2}\" ;">> ../program.vhd
	cAddr=$(( $cAddr+1 ))
	echo "      m($cAddr):=x\"${cByte:2:2}\" ;">> ../program.vhd
	cAddr=$(( $cAddr+1 ))
	echo "      m($cAddr):=x\"${cByte:0:2}\" ;">> ../program.vhd
done < ./spi_stim.txt

echo "      RETURN m;" >> ../program.vhd
echo "  END init_my_ram;" >> ../program.vhd
echo " " >> ../program.vhd
#end package body
echo "END PACKAGE BODY PROGRAM;" >> ../program.vhd

